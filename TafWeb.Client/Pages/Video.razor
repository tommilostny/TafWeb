@page "/video/{VideoRoute}"
@implements IAsyncDisposable
@inject HttpClient Http
@inject IJSRuntime JS

@if (videoDetail is not null)
{
    <PageTitle>@videoDetail.Title | Tvůrčí skupina T&amp;F</PageTitle>
    <h1>@videoDetail.Title</h1>
    <p>@(videoDetail.Published.Day).@(videoDetail.Published.Month).@(videoDetail.Published.Year)</p>
    <p>@videoDetail.Description</p>

    <div class="video-wrapper">
        <div class="plyr__video-embed" id="player">
            <iframe src="https://player.vimeo.com/video/851690817?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479"
                    allowfullscreen
                    allowtransparency
                    allow="autoplay">
            </iframe>
        </div>
    </div>
}
else
{
    <Loading />
}

@code {
    [Parameter]
    public string? VideoRoute { get; set; }

    IJSObjectReference? javascriptModule;
    VideoDetailModel? videoDetail;

    protected override async Task OnInitializedAsync()
    {
        javascriptModule = await JS.InvokeAsync<IJSObjectReference>("import", "/js/videoplayer.js");
        videoDetail = await Http.GetFromJsonAsync<VideoDetailModel>(string.Format(ApiEndpoints.VideoDetailUrl, VideoRoute));
        if (videoDetail is not null)
        {
            await javascriptModule.InvokeVoidAsync("initVideoPlayer");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (javascriptModule is not null)
        {
            await javascriptModule.DisposeAsync();
        }
    }
}